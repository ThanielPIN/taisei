#version 330 core

layout(std140) uniform RenderContext {
	mat4 modelViewMatrix;
	mat4 projectionMatrix;
	mat4 textureMatrix;
	vec4 color;
};

layout(location=0) in vec3 position;
layout(location=2) in vec2 texCoordRaw;

out vec2 texCoord;

void main(void) {
	gl_Position = projectionMatrix*modelViewMatrix*vec4(position,1.0);
	
	texCoord = (textureMatrix*vec4(texCoordRaw,0.0,1.0)).xy;
}

%% -- FRAG
#version 330 core

layout(std140) uniform RenderContext {
	mat4 modelViewMatrix;
	mat4 projectionMatrix;
	mat4 textureMatrix;
	vec4 color;
};

uniform sampler2D tex;

in vec2 texCoord;
out vec4 fragColor;

void main(void) {
	fragColor = color*texture(tex,texCoord);
}
