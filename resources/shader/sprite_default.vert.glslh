
#include "render_context.glslh"

layout(location = 0) in vec2  vertPos;

layout(location = 1) in mat4  spriteVMTransform;
// 2
// 3
// 4
layout(location = 5) in vec4  spriteRGBA;
layout(location = 6) in vec4  spriteTexRegion;
layout(location = 7) in float spriteCustomParam;
layout(location = 8) in vec2  spriteTexFlip;

#ifdef SPRITE_OUT_TEXCOORD_RAW
out vec2 texCoordRaw;
#endif

#ifdef SPRITE_OUT_TEXCOORD
out vec2 texCoord;
#include "uv_to_region.glslh"
#endif

#ifdef SPRITE_OUT_TEXREGION
out vec4 texRegion;
#endif

#ifdef SPRITE_OUT_COLOR
out vec4 color;
#endif

#ifdef SPRITE_OUT_CUSTOM
out float customParam;
#endif

void main(void) {
    vec2 uv = vertPos + vec2(0.5);
    uv.x = mix(uv.x, 1.0 - uv.x, spriteTexFlip.x);
    uv.y = mix(uv.y, 1.0 - uv.y, spriteTexFlip.y);

    gl_Position = ctx.projectionMatrix * spriteVMTransform * vec4(vertPos, 0.0, 1.0);

    #ifdef SPRITE_OUT_COLOR
    color       = spriteRGBA;
    #endif

    #ifdef SPRITE_OUT_TEXCOORD_RAW
    texCoordRaw = uv;
    #endif

    #ifdef SPRITE_OUT_TEXCOORD
    texCoord    = uv_to_region(spriteTexRegion, uv);
    #endif

    #ifdef SPRITE_OUT_TEXREGION
    texRegion   = spriteTexRegion;
    #endif

    #ifdef SPRITE_OUT_CUSTOM
    customParam = spriteCustomParam;
    #endif
}
